#+TITLE: README
#+STARTUP: indent

えるしっているか、GithubはREADMEをorgで書ける。

* 何じゃこれ
Emacsカスタマイズの為の情報を載せた、github pagesを作るやつ。
-jpとなっていますが、別に元の何かがある訳ではありません。
もしもこんな物を見つけたというレアな人が居たら、何か書いてほしいパッケー
ジがあればissueか@rizaudoに何か投げると書くと思います。
* 記事の書き方
org使うのが面倒になったり、org勉強する程じゃないけど記事書くという人
(いるのか？)はpandocか何かでorgに変換したのを@rizaudoに送ってください。
- 用意 ::
Emacs + Org-mode + org-octopress (.org編集出来るなら他のでも良いはずで
す)
#+BEGIN_SRC
M-x package-install org-octopress RET
#+END_SRC
等で、パッケージを入れた後に
#+BEGIN_SRC shell
git clone https://github.com/rizaudo/emacs-customize-101-jp.git
#+END_SRC
#+BEGIN_SRC emacs-lisp
(req ox-publish)
(req ox-jekyll)
(setq org-publish-project-alist '(("emacs-customize-101-jp"
         ;; Path to your org files.
         :base-directory "~/project/emacs-customize-101-jp/org/"
         :base-extension "org"
         ;; Path to your Jekyll project.
         :publishing-directory "~/project/emacs-customize-101-jp/_posts/"
         :recursive t
         :publishing-function org-jekyll-publish-to-html
         :headline-levels 4 
         :html-extension "html"
         )))
#+END_SRC
をどっかでEval。ちなみにEmacsでこのファイルを開いている場合、SRCブロッ
クでC-c C-cと打つとEvalされます。
これはOrgでPublishするための設定です。

jekyllなどのインストールは以下の通り
#+BEGIN_SRC 
cd ~/path/to/emacs-customize-101-jp/
bundle install
#+END_SRC
- 記事の書き方 ::
org/の中に、*YYYY-MM-DD-NAME.org*という名前でファイルを作成してくださ
い。
以下のコマンドでテンプレートを作成して、記事を書いてください。
#+BEGIN_SRC
M-x org-jekyll-insert-export-options-template RET
#+END_SRC

- 記事の中でソースコードを書く方法 ::
大抵の言語は以下のように書けば大丈夫です。
*.はGitHub Flavored対策なので無視してください*
#+BEGIN_EXAMPLE
.#+BEGIN_SRC [lang-name]
.#+END_SRC
#+END_EXAMPLE
もしもJekyllがハイライトに対応していない言語の場合

#+BEGIN_EXAMPLE
.#+BEGIN_EXAMPLE ~#+END_EXAMPLE
#+END_EXAMPLE
と入れて、とりあえずブロック化してください。
- 書いた後のテスト ::
org内の記事を作成している場合、
#+BEGIN_SRC
C-c C-e P p RET
#+END_SRC
とすると、./org内の物が./_postsにhtmlで出力されます。
その後に
#+BEGIN_SRC
jekyll serve
#+END_SRC
して、localhost:4000/emacs-customize-101-jp/に接続。
* 作成者
今の所@rizaudo
